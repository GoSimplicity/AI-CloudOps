services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cloudOps
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_general_ci
    ports:
      - "33069:3306"
    volumes:
      - ./data/mysql/data:/var/lib/mysql:rw
      - ./deploy/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command:
      [
        "--default-authentication-plugin=mysql_native_password",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_general_ci",
        "--explicit_defaults_for_timestamp=true",
        "--lower_case_table_names=1",
        "--max_connections=1000"
      ]
    privileged: true
    restart: always
    networks:
      - cloudops_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:6.2.5
    container_name: redis
    ports:
      - "36379:6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./data/redis/data:/data:rw
    command: ["redis-server", "--requirepass", "v6SxhWHyZC7S"]
    restart: always
    networks:
      - cloudops_net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  cloudops-backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: cloudops-backend:v0.0.1  
    container_name: cloudops-backend 
    environment:
      TZ: Asia/Shanghai
      GOPROXY: https://goproxy.cn,direct
    env_file:
      - .env
    ports:
      - "8889:8889"
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
    privileged: true
    restart: always
    networks:
      - cloudops_net
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8889/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  cloudops-web:
    image: cloudops-web:v0.0.1
    container_name: cloudops-web
    environment:
      TZ: Asia/Shanghai
    restart: always
    networks:
      - cloudops_net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  nginx-gateway:
    image: nginx:1.21.5
    container_name: nginx-gateway
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "8888:80"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro  
      - ./data/nginx/log:/var/log/nginx
    networks:
      - cloudops_net
    depends_on:
      cloudops-backend:
        condition: service_healthy
      cloudops-web:
        condition: service_healthy

networks:
  cloudops_net:
    name: cloudops_net 
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/16
