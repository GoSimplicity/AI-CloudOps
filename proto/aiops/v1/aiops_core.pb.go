// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.3
// source: aiops/v1/aiops_core.proto

package aiopsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"` // 可选的服务名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_aiops_v1_aiops_core_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`       // "healthy", "unhealthy", "degraded"
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`     // 版本信息
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 检查时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_aiops_v1_aiops_core_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      string                 `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`                    // 用户问题
	Mode          string                 `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`                            // 模式: "rag" 或 "mcp"
	SessionId     string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话ID
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_aiops_v1_aiops_core_proto_rawDescGZIP(), []int{2}
}

func (x *ChatRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ChatRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *ChatRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ChatRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ChatResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Answer         string                 `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`                                         // AI回答
	SessionId      string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                  // 会话ID
	Status         string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                         // 状态: "success", "error", "partial"
	ErrorMessage   string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`         // 错误信息(如果有)
	ProcessingTime float32                `protobuf:"fixed32,5,opt,name=processing_time,json=processingTime,proto3" json:"processing_time,omitempty"` // 处理时间(秒)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_aiops_v1_aiops_core_proto_rawDescGZIP(), []int{3}
}

func (x *ChatResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *ChatResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ChatResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ChatResponse) GetProcessingTime() float32 {
	if x != nil {
		return x.ProcessingTime
	}
	return 0
}

type LoadPredictionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`   // 服务名称
	CurrentLoad   float32                `protobuf:"fixed32,2,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"` // 当前负载
	Hours         int32                  `protobuf:"varint,3,opt,name=hours,proto3" json:"hours,omitempty"`                                 // 预测时间窗口(小时)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadPredictionRequest) Reset() {
	*x = LoadPredictionRequest{}
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadPredictionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadPredictionRequest) ProtoMessage() {}

func (x *LoadPredictionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadPredictionRequest.ProtoReflect.Descriptor instead.
func (*LoadPredictionRequest) Descriptor() ([]byte, []int) {
	return file_aiops_v1_aiops_core_proto_rawDescGZIP(), []int{4}
}

func (x *LoadPredictionRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *LoadPredictionRequest) GetCurrentLoad() float32 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

func (x *LoadPredictionRequest) GetHours() int32 {
	if x != nil {
		return x.Hours
	}
	return 0
}

type LoadPredictionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Predictions    []*LoadPrediction      `protobuf:"bytes,1,rep,name=predictions,proto3" json:"predictions,omitempty"`       // 预测结果
	Recommendation string                 `protobuf:"bytes,2,opt,name=recommendation,proto3" json:"recommendation,omitempty"` // 简单建议文本
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LoadPredictionResponse) Reset() {
	*x = LoadPredictionResponse{}
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadPredictionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadPredictionResponse) ProtoMessage() {}

func (x *LoadPredictionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadPredictionResponse.ProtoReflect.Descriptor instead.
func (*LoadPredictionResponse) Descriptor() ([]byte, []int) {
	return file_aiops_v1_aiops_core_proto_rawDescGZIP(), []int{5}
}

func (x *LoadPredictionResponse) GetPredictions() []*LoadPrediction {
	if x != nil {
		return x.Predictions
	}
	return nil
}

func (x *LoadPredictionResponse) GetRecommendation() string {
	if x != nil {
		return x.Recommendation
	}
	return ""
}

type LoadPrediction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hour          int32                  `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`                                         // 小时
	PredictedLoad float32                `protobuf:"fixed32,2,opt,name=predicted_load,json=predictedLoad,proto3" json:"predicted_load,omitempty"` // 预测负载
	Confidence    float32                `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`                            // 置信度 0-1
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadPrediction) Reset() {
	*x = LoadPrediction{}
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadPrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadPrediction) ProtoMessage() {}

func (x *LoadPrediction) ProtoReflect() protoreflect.Message {
	mi := &file_aiops_v1_aiops_core_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadPrediction.ProtoReflect.Descriptor instead.
func (*LoadPrediction) Descriptor() ([]byte, []int) {
	return file_aiops_v1_aiops_core_proto_rawDescGZIP(), []int{6}
}

func (x *LoadPrediction) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *LoadPrediction) GetPredictedLoad() float32 {
	if x != nil {
		return x.PredictedLoad
	}
	return 0
}

func (x *LoadPrediction) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

var File_aiops_v1_aiops_core_proto protoreflect.FileDescriptor

const file_aiops_v1_aiops_core_proto_rawDesc = "" +
	"\n" +
	"\x19aiops/v1/aiops_core.proto\x12\baiops.v1\x1a\x1fgoogle/protobuf/timestamp.proto\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x81\x01\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"u\n" +
	"\vChatRequest\x12\x1a\n" +
	"\bquestion\x18\x01 \x01(\tR\bquestion\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\tR\x04mode\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\"\xab\x01\n" +
	"\fChatResponse\x12\x16\n" +
	"\x06answer\x18\x01 \x01(\tR\x06answer\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12'\n" +
	"\x0fprocessing_time\x18\x05 \x01(\x02R\x0eprocessingTime\"s\n" +
	"\x15LoadPredictionRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12!\n" +
	"\fcurrent_load\x18\x02 \x01(\x02R\vcurrentLoad\x12\x14\n" +
	"\x05hours\x18\x03 \x01(\x05R\x05hours\"|\n" +
	"\x16LoadPredictionResponse\x12:\n" +
	"\vpredictions\x18\x01 \x03(\v2\x18.aiops.v1.LoadPredictionR\vpredictions\x12&\n" +
	"\x0erecommendation\x18\x02 \x01(\tR\x0erecommendation\"k\n" +
	"\x0eLoadPrediction\x12\x12\n" +
	"\x04hour\x18\x01 \x01(\x05R\x04hour\x12%\n" +
	"\x0epredicted_load\x18\x02 \x01(\x02R\rpredictedLoad\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x02R\n" +
	"confidence2\xe5\x01\n" +
	"\fAIOpsService\x12J\n" +
	"\vHealthCheck\x12\x1c.aiops.v1.HealthCheckRequest\x1a\x1d.aiops.v1.HealthCheckResponse\x127\n" +
	"\x04Chat\x12\x15.aiops.v1.ChatRequest\x1a\x16.aiops.v1.ChatResponse0\x01\x12P\n" +
	"\vPredictLoad\x12\x1f.aiops.v1.LoadPredictionRequest\x1a .aiops.v1.LoadPredictionResponseB<Z:github.com/GoSimplicity/AI-CloudOps/proto/aiops/v1;aiopsv1b\x06proto3"

var (
	file_aiops_v1_aiops_core_proto_rawDescOnce sync.Once
	file_aiops_v1_aiops_core_proto_rawDescData []byte
)

func file_aiops_v1_aiops_core_proto_rawDescGZIP() []byte {
	file_aiops_v1_aiops_core_proto_rawDescOnce.Do(func() {
		file_aiops_v1_aiops_core_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aiops_v1_aiops_core_proto_rawDesc), len(file_aiops_v1_aiops_core_proto_rawDesc)))
	})
	return file_aiops_v1_aiops_core_proto_rawDescData
}

var file_aiops_v1_aiops_core_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_aiops_v1_aiops_core_proto_goTypes = []any{
	(*HealthCheckRequest)(nil),     // 0: aiops.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),    // 1: aiops.v1.HealthCheckResponse
	(*ChatRequest)(nil),            // 2: aiops.v1.ChatRequest
	(*ChatResponse)(nil),           // 3: aiops.v1.ChatResponse
	(*LoadPredictionRequest)(nil),  // 4: aiops.v1.LoadPredictionRequest
	(*LoadPredictionResponse)(nil), // 5: aiops.v1.LoadPredictionResponse
	(*LoadPrediction)(nil),         // 6: aiops.v1.LoadPrediction
	(*timestamppb.Timestamp)(nil),  // 7: google.protobuf.Timestamp
}
var file_aiops_v1_aiops_core_proto_depIdxs = []int32{
	7, // 0: aiops.v1.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	6, // 1: aiops.v1.LoadPredictionResponse.predictions:type_name -> aiops.v1.LoadPrediction
	0, // 2: aiops.v1.AIOpsService.HealthCheck:input_type -> aiops.v1.HealthCheckRequest
	2, // 3: aiops.v1.AIOpsService.Chat:input_type -> aiops.v1.ChatRequest
	4, // 4: aiops.v1.AIOpsService.PredictLoad:input_type -> aiops.v1.LoadPredictionRequest
	1, // 5: aiops.v1.AIOpsService.HealthCheck:output_type -> aiops.v1.HealthCheckResponse
	3, // 6: aiops.v1.AIOpsService.Chat:output_type -> aiops.v1.ChatResponse
	5, // 7: aiops.v1.AIOpsService.PredictLoad:output_type -> aiops.v1.LoadPredictionResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_aiops_v1_aiops_core_proto_init() }
func file_aiops_v1_aiops_core_proto_init() {
	if File_aiops_v1_aiops_core_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aiops_v1_aiops_core_proto_rawDesc), len(file_aiops_v1_aiops_core_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aiops_v1_aiops_core_proto_goTypes,
		DependencyIndexes: file_aiops_v1_aiops_core_proto_depIdxs,
		MessageInfos:      file_aiops_v1_aiops_core_proto_msgTypes,
	}.Build()
	File_aiops_v1_aiops_core_proto = out.File
	file_aiops_v1_aiops_core_proto_goTypes = nil
	file_aiops_v1_aiops_core_proto_depIdxs = nil
}
